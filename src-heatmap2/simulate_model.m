function [model] = simulate_model(model, params, filter_thr)
    for i = 1 : params.n - 1
%         if rem(i, 1000) == 0
%             disp([i, params.n]);
%         end
        [model.V_line(:,i + 1), ...
         model.U_line(:,1), ...
         model.G(:,i + 1), ...
         model.Isyn_line, ...
         model.Mask_line, ...
         model.Iapp_v_full(:,:,i)] = ...
            step_neurons(model.V_line(:,i), ...
                         model.U_line(:,1), ...
                         model.G(:,i), ...
                         model.T_Iapp_met(i), ...
                         model.Iapp, ...
                         model.Isyn_line, ...
                         model.Post, ...
                         model.Pre, ...
                         model.Iastro_neuron_line(:,1), ...
                         model.I_poisson_noise(:,i), ...
                         filter_thr);

        [model.neuron_astrozone_activity(:,:,1), ...
         model.neuron_astrozone_spikes(:,:,i)] = ...
            get_neuron_astrozone_activity(model.G(:,i), model.Mask_line);

        [model.Ca(:,:,1), ...
         model.H(:,:,1), ...
         model.IP3(:,:,1), ...
         model.Iastro_neuron, ...
         model.Ineuro] = ...
            step_astrocytes(model.neuron_astrozone_activity(:,:,1), ...
                            model.neuron_astrozone_spikes, ...
                            model.Ineuro, i, ...
                            model.Ca(:,:,1), ...
                            model.H(:,:,1), ...
                            model.IP3(:,:,1), ...
                            model.Iastro_neuron);

        [model.Iastro_neuron_line(:,1), ...
         model.Ca_size_neuros(:,:,i)] = ...
            expand_astrocytes(model.Ca(:,:,1), ...
                              model.Iastro_neuron(:,:,i));
    end
end